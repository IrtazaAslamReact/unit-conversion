{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/conversion.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ConversionFormComponent_div_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3, \"Response:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.studentResponse, \"\");\n  }\n}\nfunction ConversionFormComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Result: \", ctx_r1.output, \"\");\n  }\n}\nexport class ConversionFormComponent {\n  constructor(conversionService) {\n    this.conversionService = conversionService;\n  }\n  ngOnInit() {}\n  onSubmit() {\n    this.conversionService.convert(this.value, this.fromUnit, this.toUnit, this.studentResponse).pipe(catchError((error, caught) => {\n      this.errorMessage = error.message;\n      console.error('There was an error!', error);\n      // after handling error, return a new observable \n      // that doesn't emit any values and completes\n      return of();\n    })).subscribe(result => this.output = result);\n  }\n}\nConversionFormComponent.ɵfac = function ConversionFormComponent_Factory(t) {\n  return new (t || ConversionFormComponent)(i0.ɵɵdirectiveInject(i1.ConversionService));\n};\nConversionFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConversionFormComponent,\n  selectors: [[\"app-conversion-form\"]],\n  decls: 59,\n  vars: 5,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"number\", \"name\", \"value\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"fromUnit\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Celsius\"], [\"value\", \"Fahrenheit\"], [\"value\", \"Kelvin\"], [\"value\", \"Rankine\"], [\"value\", \"liters\"], [\"value\", \"tablespoons\"], [\"value\", \"cubicInches\"], [\"value\", \"cups\"], [\"value\", \"cubicFeet\"], [\"value\", \"gallons\"], [\"name\", \"toUnit\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngIf\"], [\"class\", \"output\", 4, \"ngIf\"], [1, \"output\"]],\n  template: function ConversionFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ConversionFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\");\n      i0.ɵɵtext(3, \"Value:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ConversionFormComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.value = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\");\n      i0.ɵɵtext(7, \"From Unit:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ConversionFormComponent_Template_select_ngModelChange_8_listener($event) {\n        return ctx.fromUnit = $event;\n      });\n      i0.ɵɵelementStart(9, \"option\", 3);\n      i0.ɵɵtext(10, \"Celsius\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 4);\n      i0.ɵɵtext(12, \"Fahrenheit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\", 5);\n      i0.ɵɵtext(14, \"Kelvin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"option\", 6);\n      i0.ɵɵtext(16, \"Rankine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"option\", 7);\n      i0.ɵɵtext(18, \"Liters\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\", 8);\n      i0.ɵɵtext(20, \"Tablespoons\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 9);\n      i0.ɵɵtext(22, \"Cubic Inches\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"option\", 10);\n      i0.ɵɵtext(24, \"Cups\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 11);\n      i0.ɵɵtext(26, \"Cubic Feet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"option\", 12);\n      i0.ɵɵtext(28, \"Gallons\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\")(30, \"label\");\n      i0.ɵɵtext(31, \"To Unit:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"select\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function ConversionFormComponent_Template_select_ngModelChange_32_listener($event) {\n        return ctx.toUnit = $event;\n      });\n      i0.ɵɵelementStart(33, \"option\", 3);\n      i0.ɵɵtext(34, \"Celsius\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"option\", 4);\n      i0.ɵɵtext(36, \"Fahrenheit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"option\", 5);\n      i0.ɵɵtext(38, \"Kelvin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"option\", 6);\n      i0.ɵɵtext(40, \"Rankine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"option\", 7);\n      i0.ɵɵtext(42, \"Liters\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"option\", 8);\n      i0.ɵɵtext(44, \"Tablespoons\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"option\", 9);\n      i0.ɵɵtext(46, \"Cubic Inches\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"option\", 10);\n      i0.ɵɵtext(48, \"Cups\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"option\", 11);\n      i0.ɵɵtext(50, \"Cubic Feet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"option\", 12);\n      i0.ɵɵtext(52, \"Gallons\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(53, \"button\", 14);\n      i0.ɵɵtext(54, \"Convert\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(55, \"br\")(56, \"br\");\n      i0.ɵɵtemplate(57, ConversionFormComponent_div_57_Template, 5, 1, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(58, ConversionFormComponent_div_58_Template, 3, 1, \"div\", 16);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.value);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.fromUnit);\n      i0.ɵɵadvance(24);\n      i0.ɵɵproperty(\"ngModel\", ctx.toUnit);\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngIf\", ctx.studentResponse);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.output);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"form[_ngcontent-%COMP%] {\\n    width: 500px;\\n    margin: 0 auto;\\n    text-align: left;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n    margin-right: 10px;\\n  }\\n  \\n  input[type=\\\"number\\\"][_ngcontent-%COMP%] {\\n    padding: 5px;\\n    font-size: 16px;\\n    margin-bottom: 20px;\\n    width: 100%;\\n  }\\n  \\n  select[_ngcontent-%COMP%] {\\n    padding: 5px;\\n    font-size: 16px;\\n    margin-bottom: 20px;\\n    width: 100%;\\n  }\\n  \\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n    background-color: green;\\n    color: white;\\n    padding: 10px 20px;\\n    border: none;\\n    border-radius: 5px;\\n    font-size: 16px;\\n    cursor: pointer;\\n  }\\n  \\n  p[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n  }\\n  \\n  .output[_ngcontent-%COMP%] {\\n    font-size: 20px;\\n    margin-top: 20px;\\n    text-align: center;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29udmVyc2lvbi1mb3JtL2NvbnZlcnNpb24tZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGNBQWM7SUFDZCxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxpQkFBaUI7SUFDakIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsV0FBVztFQUNiOztFQUVBO0lBQ0UsWUFBWTtJQUNaLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsV0FBVztFQUNiOztFQUVBO0lBQ0UsdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsa0JBQWtCO0VBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XG4gICAgd2lkdGg6IDUwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cbiAgXG4gIGxhYmVsIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIH1cbiAgXG4gIGlucHV0W3R5cGU9XCJudW1iZXJcIl0ge1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgc2VsZWN0IHtcbiAgICBwYWRkaW5nOiA1cHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIGJ1dHRvblt0eXBlPVwic3VibWl0XCJdIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICBcbiAgcCBzdHJvbmcge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG4gIFxuICAub3V0cHV0IHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ConversionFormComponent","constructor","conversionService","ngOnInit","onSubmit","convert","value","fromUnit","toUnit","studentResponse","pipe","catchError","error","caught","errorMessage","message","console","of","subscribe","result","output","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/haseeb/Desktop/Test Evaluations/unit-conversion/client/src/app/conversion-form/conversion-form.component.html","/home/haseeb/Desktop/Test Evaluations/unit-conversion/client/src/app/conversion-form/conversion-form.component.ts"],"sourcesContent":["<form (ngSubmit)=\"onSubmit()\">\n  <div>\n    <label>Value:</label>\n    <input type=\"number\" [(ngModel)]=\"value\" name=\"value\" required />\n  </div>\n  <div>\n    <label>From Unit:</label>\n    <select\n      [ngModel]=\"fromUnit\"\n      (ngModelChange)=\"fromUnit = $event\"\n      name=\"fromUnit\"\n      required\n    >\n      <option value=\"Celsius\">Celsius</option>\n      <option value=\"Fahrenheit\">Fahrenheit</option>\n      <option value=\"Kelvin\">Kelvin</option>\n      <option value=\"Rankine\">Rankine</option>\n      <option value=\"liters\">Liters</option>\n      <option value=\"tablespoons\">Tablespoons</option>\n      <option value=\"cubicInches\">Cubic Inches</option>\n      <option value=\"cups\">Cups</option>\n      <option value=\"cubicFeet\">Cubic Feet</option>\n      <option value=\"gallons\">Gallons</option>\n    </select>\n  </div>\n  <div>\n    <label>To Unit:</label>\n    <select\n      [ngModel]=\"toUnit\"\n      (ngModelChange)=\"toUnit = $event\"\n      name=\"toUnit\"\n      required\n    >\n      <option value=\"Celsius\">Celsius</option>\n      <option value=\"Fahrenheit\">Fahrenheit</option>\n      <option value=\"Kelvin\">Kelvin</option>\n      <option value=\"Rankine\">Rankine</option>\n      <option value=\"liters\">Liters</option>\n      <option value=\"tablespoons\">Tablespoons</option>\n      <option value=\"cubicInches\">Cubic Inches</option>\n      <option value=\"cups\">Cups</option>\n      <option value=\"cubicFeet\">Cubic Feet</option>\n      <option value=\"gallons\">Gallons</option>\n    </select>\n  </div>\n  <button type=\"submit\">Convert</button>\n  <br /><br />\n  <div *ngIf=\"studentResponse\">\n    <p><strong>Response:</strong> {{ studentResponse }}</p>\n  </div>\n</form>\n<div *ngIf=\"output\" class=\"output\">\n    <p>Result: {{ output }}</p>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ConversionService } from '../services/conversion.service';\n\n@Component({\n  selector: 'app-conversion-form',\n  templateUrl: './conversion-form.component.html',\n  styleUrls: ['./conversion-form.component.css']\n})\nexport class ConversionFormComponent implements OnInit {\n  value: any;\n  fromUnit: any;\n  toUnit: any;\n  studentResponse:any;\n  result: any;\n  output: any;\n\n  constructor(private conversionService: ConversionService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    this.conversionService.convert(this.value, this.fromUnit, this.toUnit,this.studentResponse)\n    .pipe(catchError((error: any, caught: Observable<any>): Observable<any> => {\n      this.errorMessage = error.message;\n      console.error('There was an error!', error);\n\n      // after handling error, return a new observable \n      // that doesn't emit any values and completes\n      return of();\n  }))\n      .subscribe(result => this.output = result);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}