{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class ConversionFormComponent {\n  onSubmit() {\n    console.log('Submitting form', this.value, this.fromUnit, this.toUnit);\n  }\n}\nConversionFormComponent.ɵfac = function ConversionFormComponent_Factory(t) {\n  return new (t || ConversionFormComponent)();\n};\nConversionFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConversionFormComponent,\n  selectors: [[\"app-conversion-form\"]],\n  decls: 55,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [\"type\", \"number\", \"name\", \"value\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"fromUnit\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"Celsius\"], [\"value\", \"Fahrenheit\"], [\"value\", \"Kelvin\"], [\"value\", \"Rankine\"], [\"value\", \"liters\"], [\"value\", \"tablespoons\"], [\"value\", \"cubicInches\"], [\"value\", \"cups\"], [\"value\", \"cubicFeet\"], [\"value\", \"gallons\"], [\"name\", \"toUnit\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function ConversionFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ConversionFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\");\n      i0.ɵɵtext(3, \"Value:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ConversionFormComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.value = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\");\n      i0.ɵɵtext(7, \"From Unit:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ConversionFormComponent_Template_select_ngModelChange_8_listener($event) {\n        return ctx.fromUnit = $event;\n      });\n      i0.ɵɵelementStart(9, \"option\", 3);\n      i0.ɵɵtext(10, \"Celsius\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 4);\n      i0.ɵɵtext(12, \"Fahrenheit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\", 5);\n      i0.ɵɵtext(14, \"Kelvin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"option\", 6);\n      i0.ɵɵtext(16, \"Rankine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"option\", 7);\n      i0.ɵɵtext(18, \"Liters\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\", 8);\n      i0.ɵɵtext(20, \"Tablespoons\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 9);\n      i0.ɵɵtext(22, \"Cubic Inches\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"option\", 10);\n      i0.ɵɵtext(24, \"Cups\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 11);\n      i0.ɵɵtext(26, \"Cubic Feet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"option\", 12);\n      i0.ɵɵtext(28, \"Gallons\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"div\")(30, \"label\");\n      i0.ɵɵtext(31, \"To Unit:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"select\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function ConversionFormComponent_Template_select_ngModelChange_32_listener($event) {\n        return ctx.toUnit = $event;\n      });\n      i0.ɵɵelementStart(33, \"option\", 3);\n      i0.ɵɵtext(34, \"Celsius\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"option\", 4);\n      i0.ɵɵtext(36, \"Fahrenheit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"option\", 5);\n      i0.ɵɵtext(38, \"Kelvin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"option\", 6);\n      i0.ɵɵtext(40, \"Rankine\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"option\", 7);\n      i0.ɵɵtext(42, \"Liters\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"option\", 8);\n      i0.ɵɵtext(44, \"Tablespoons\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"option\", 9);\n      i0.ɵɵtext(46, \"Cubic Inches\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"option\", 10);\n      i0.ɵɵtext(48, \"Cups\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"option\", 11);\n      i0.ɵɵtext(50, \"Cubic Feet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"option\", 12);\n      i0.ɵɵtext(52, \"Gallons\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(53, \"button\", 14);\n      i0.ɵɵtext(54, \"Convert\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.value);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.fromUnit);\n      i0.ɵɵadvance(24);\n      i0.ɵɵproperty(\"ngModel\", ctx.toUnit);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,uBAAuB;EAKlCC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAAC;EACxE;;AAPWN,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPpCC,+BAA8B;MAAxBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC3BD,2BAAK;MACIA,sBAAM;MAAAA,iBAAQ;MACrBA,gCAA+D;MAA1CA;QAAA;MAAA,EAAmB;MAAxCA,iBAA+D;MAEjEA,2BAAK;MACIA,0BAAU;MAAAA,iBAAQ;MACzBA,iCAAwF;MAA3DA;QAAA;MAAA,EAAiC;MAC5DA,iCAAwB;MAAAA,wBAAO;MAAAA,iBAAS;MACxCA,kCAA2B;MAAAA,2BAAU;MAAAA,iBAAS;MAC9CA,kCAAuB;MAAAA,uBAAM;MAAAA,iBAAS;MACtCA,kCAAwB;MAAAA,wBAAO;MAAAA,iBAAS;MACxCA,kCAAuB;MAAAA,uBAAM;MAAAA,iBAAS;MACtCA,kCAA4B;MAAAA,4BAAW;MAAAA,iBAAS;MAChDA,kCAA4B;MAAAA,6BAAY;MAAAA,iBAAS;MACjDA,mCAAqB;MAAAA,qBAAI;MAAAA,iBAAS;MAClCA,mCAA0B;MAAAA,2BAAU;MAAAA,iBAAS;MAC7CA,mCAAwB;MAAAA,wBAAO;MAAAA,iBAAS;MAG5CA,4BAAK;MACIA,yBAAQ;MAAAA,iBAAQ;MACvBA,mCAAkF;MAAvDA;QAAA;MAAA,EAA+B;MACxDA,kCAAwB;MAAAA,wBAAO;MAAAA,iBAAS;MACxCA,kCAA2B;MAAAA,2BAAU;MAAAA,iBAAS;MAC9CA,kCAAuB;MAAAA,uBAAM;MAAAA,iBAAS;MACtCA,kCAAwB;MAAAA,wBAAO;MAAAA,iBAAS;MACxCA,kCAAuB;MAAAA,uBAAM;MAAAA,iBAAS;MACtCA,kCAA4B;MAAAA,4BAAW;MAAAA,iBAAS;MAChDA,kCAA4B;MAAAA,6BAAY;MAAAA,iBAAS;MACjDA,mCAAqB;MAAAA,qBAAI;MAAAA,iBAAS;MAClCA,mCAA0B;MAAAA,2BAAU;MAAAA,iBAAS;MAC7CA,mCAAwB;MAAAA,wBAAO;MAAAA,iBAAS;MAG5CA,mCAAsB;MAAAA,wBAAO;MAAAA,iBAAS;;;MAhCfA,eAAmB;MAAnBA,mCAAmB;MAIhCA,eAAoB;MAApBA,sCAAoB;MAepBA,gBAAkB;MAAlBA,oCAAkB","names":["ConversionFormComponent","onSubmit","console","log","value","fromUnit","toUnit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/haseeb/Desktop/Test Evaluations/unit-conversion/client/src/app/conversion-form/conversion-form.component.ts","/home/haseeb/Desktop/Test Evaluations/unit-conversion/client/src/app/conversion-form/conversion-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ConversionService } from '../services/conversion.service';\n\n@Component({\n  selector: 'app-conversion-form',\n  templateUrl: './conversion-form.component.html',\n  styleUrls: ['./conversion-form.component.css']\n})\nexport class ConversionFormComponent{\n  value: number;\n  fromUnit: string;\n  toUnit: string;\n\n  onSubmit() {\n    console.log('Submitting form', this.value, this.fromUnit, this.toUnit);\n  }\n}\n","\n<form (ngSubmit)=\"onSubmit()\">\n  <div>\n    <label>Value:</label>\n    <input type=\"number\" [(ngModel)]=\"value\" name=\"value\" required>\n  </div>\n  <div>\n    <label>From Unit:</label>\n    <select [ngModel]=\"fromUnit\" (ngModelChange)=\"fromUnit=$event\" name=\"fromUnit\" required>\n      <option value=\"Celsius\">Celsius</option>\n      <option value=\"Fahrenheit\">Fahrenheit</option>\n      <option value=\"Kelvin\">Kelvin</option>\n      <option value=\"Rankine\">Rankine</option>\n      <option value=\"liters\">Liters</option>\n      <option value=\"tablespoons\">Tablespoons</option>\n      <option value=\"cubicInches\">Cubic Inches</option>\n      <option value=\"cups\">Cups</option>\n      <option value=\"cubicFeet\">Cubic Feet</option>\n      <option value=\"gallons\">Gallons</option>\n    </select>\n  </div>\n  <div>\n    <label>To Unit:</label>\n    <select [ngModel]=\"toUnit\" (ngModelChange)=\"toUnit=$event\" name=\"toUnit\" required>\n      <option value=\"Celsius\">Celsius</option>\n      <option value=\"Fahrenheit\">Fahrenheit</option>\n      <option value=\"Kelvin\">Kelvin</option>\n      <option value=\"Rankine\">Rankine</option>\n      <option value=\"liters\">Liters</option>\n      <option value=\"tablespoons\">Tablespoons</option>\n      <option value=\"cubicInches\">Cubic Inches</option>\n      <option value=\"cups\">Cups</option>\n      <option value=\"cubicFeet\">Cubic Feet</option>\n      <option value=\"gallons\">Gallons</option>\n    </select>\n  </div>\n  <button type=\"submit\">Convert</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}